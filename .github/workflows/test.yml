name: Test

on: push

env:
  BUILD_TYPE: Release

jobs:
  test:
    name: Test on ${{ matrix.os }} with double precision ${{ matrix.double_precision }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v2

      - name: Install libcurl4
        run: sudo apt-get install -y libcurl4 libcurl4-openssl-dev python3-venv python3-pip

      - name: Install pipx
        run: python3 -m pip install --user -U pipx

      - name: Install eviltest
        run: curl -fsSL "https://app.danilohorta.me/eviltest" | bash

      - name: Setup eviltest path
        run: |
          echo "$HOME/.bats/bin" >> $GITHUB_PATH
          echo "BATS_LIB_PATH=$HOME/.bats/lib" >> $GITHUB_ENV

      - name: Start deciphon-api
        run: python3 -m pipx run deciphon-api start --daemon

      - name: Configure CMake
        if: runner.os == 'Linux'
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_SANITIZER='Address;Undefined' -DENABLE_ALL_WARNINGS=ON

      - name: Configure CMake
        if: runner.os == 'macOS'
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_ALL_WARNINGS=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: CTest
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

      - name: Evil test
        working-directory: ${{github.workspace}}/build
        run: |
          bats test/pressy.bats
          bats test/schedy.bats
